"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[362],{3905:function(a,n,e){e.d(n,{Zo:function(){return c},kt:function(){return b}});var r=e(7294);function t(a,n,e){return n in a?Object.defineProperty(a,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):a[n]=e,a}function l(a,n){var e=Object.keys(a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(a,n).enumerable}))),e.push.apply(e,r)}return e}function o(a){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?l(Object(e),!0).forEach((function(n){t(a,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(e)):l(Object(e)).forEach((function(n){Object.defineProperty(a,n,Object.getOwnPropertyDescriptor(e,n))}))}return a}function s(a,n){if(null==a)return{};var e,r,t=function(a,n){if(null==a)return{};var e,r,t={},l=Object.keys(a);for(r=0;r<l.length;r++)e=l[r],n.indexOf(e)>=0||(t[e]=a[e]);return t}(a,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(a);for(r=0;r<l.length;r++)e=l[r],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(a,e)&&(t[e]=a[e])}return t}var g=r.createContext({}),i=function(a){var n=r.useContext(g),e=n;return a&&(e="function"==typeof a?a(n):o(o({},n),a)),e},c=function(a){var n=i(a.components);return r.createElement(g.Provider,{value:n},a.children)},f={inlineCode:"code",wrapper:function(a){var n=a.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(a,n){var e=a.components,t=a.mdxType,l=a.originalType,g=a.parentName,c=s(a,["components","mdxType","originalType","parentName"]),u=i(e),b=t,p=u["".concat(g,".").concat(b)]||u[b]||f[b]||l;return e?r.createElement(p,o(o({ref:n},c),{},{components:e})):r.createElement(p,o({ref:n},c))}));function b(a,n){var e=arguments,t=n&&n.mdxType;if("string"==typeof a||t){var l=e.length,o=new Array(l);o[0]=u;var s={};for(var g in n)hasOwnProperty.call(n,g)&&(s[g]=n[g]);s.originalType=a,s.mdxType="string"==typeof a?a:t,o[1]=s;for(var i=2;i<l;i++)o[i]=e[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,e)}u.displayName="MDXCreateElement"},8253:function(a,n,e){e.r(n),e.d(n,{assets:function(){return c},contentTitle:function(){return g},default:function(){return b},frontMatter:function(){return s},metadata:function(){return i},toc:function(){return f}});var r=e(7462),t=e(3366),l=(e(7294),e(3905)),o=["components"],s={sidebar_position:1,id:"rgb",title:"Rgb"},g="Rgb",i={unversionedId:"extras-scala-io/truecolor/rgb",id:"extras-scala-io/truecolor/rgb",title:"Rgb",description:"Rgb",source:"@site/../generated-docs/target/mdoc/extras-scala-io/truecolor/rgb.md",sourceDirName:"extras-scala-io/truecolor",slug:"/extras-scala-io/truecolor/rgb",permalink:"/docs/extras-scala-io/truecolor/rgb",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"rgb",title:"Rgb"},sidebar:"tutorialSidebar",previous:{title:"True Color",permalink:"/docs/extras-scala-io/truecolor/"},next:{title:"File",permalink:"/docs/extras-scala-io/file"}},c={},f=[{value:"<code>Rgb</code>",id:"rgb-1",level:2},{value:"<code>Rgb.fromInt(Int)</code> - Valid",id:"rgbfromintint---valid",level:2},{value:"<code>Rgb.fromInt(Int)</code> - Invalid",id:"rgbfromintint---invalid",level:2},{value:"<code>Rgb.unsafeFromInt(Int)</code> - Valid",id:"rgbunsafefromintint---valid",level:2},{value:"<code>Rgb.unsafeFromInt(Int)</code> - Invalid",id:"rgbunsafefromintint---invalid",level:2},{value:"<code>Rgb.fromHexString(String)</code> - Valid",id:"rgbfromhexstringstring---valid",level:2},{value:"<code>Rgb.fromHexString(String)</code> - Invalid",id:"rgbfromhexstringstring---invalid",level:2},{value:"<code>Rgb.unsafeFromHexString(String)</code> - Valid",id:"rgbunsafefromhexstringstring---valid",level:2},{value:"<code>Rgb.unsafeFromHexString(String)</code> - Invalid",id:"rgbunsafefromhexstringstring---invalid",level:2},{value:"<code>Rgb.toAsciiEsc</code>",id:"rgbtoasciiesc",level:2},{value:"syntax",id:"syntax",level:2}],u={toc:f};function b(a){var n=a.components,e=(0,t.Z)(a,o);return(0,l.kt)("wrapper",(0,r.Z)({},u,e,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"rgb"},"Rgb"),(0,l.kt)("h2",{id:"rgb-1"},(0,l.kt)("inlineCode",{parentName:"h2"},"Rgb")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.scala.io.truecolor.Rgb\n")),(0,l.kt)("h2",{id:"rgbfromintint---valid"},(0,l.kt)("inlineCode",{parentName:"h2"},"Rgb.fromInt(Int)")," - Valid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.fromInt(0x000000)\n// res1: Either[String, Rgb] = Right(value = Rgb(0, 0, 0))\nRgb.fromInt(0x0000ff)\n// res2: Either[String, Rgb] = Right(value = Rgb(0, 0, 255))\nRgb.fromInt(0x00ff00)\n// res3: Either[String, Rgb] = Right(value = Rgb(0, 255, 0))\nRgb.fromInt(0xff0000)\n// res4: Either[String, Rgb] = Right(value = Rgb(255, 0, 0))\nRgb.fromInt(0xffffff)\n// res5: Either[String, Rgb] = Right(value = Rgb(255, 255, 255))\n")),(0,l.kt)("h2",{id:"rgbfromintint---invalid"},(0,l.kt)("inlineCode",{parentName:"h2"},"Rgb.fromInt(Int)")," - Invalid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'Rgb.fromInt(0x000000 - 1)\n// res6: Either[String, Rgb] = Left(value = "Invalid RGB color. Input: -1")\nRgb.fromInt(0xffffff + 1)\n// res7: Either[String, Rgb] = Left(\n//   value = "Invalid RGB color. Input: 16777216"\n// )\n')),(0,l.kt)("h2",{id:"rgbunsafefromintint---valid"},(0,l.kt)("inlineCode",{parentName:"h2"},"Rgb.unsafeFromInt(Int)")," - Valid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.unsafeFromInt(0x000000)\n// res8: Rgb = Rgb(0, 0, 0)\nRgb.unsafeFromInt(0x0000ff)\n// res9: Rgb = Rgb(0, 0, 255)\nRgb.unsafeFromInt(0x00ff00)\n// res10: Rgb = Rgb(0, 255, 0)\nRgb.unsafeFromInt(0xff0000)\n// res11: Rgb = Rgb(255, 0, 0)\nRgb.unsafeFromInt(0xffffff)\n// res12: Rgb = Rgb(255, 255, 255)\n")),(0,l.kt)("h2",{id:"rgbunsafefromintint---invalid"},(0,l.kt)("inlineCode",{parentName:"h2"},"Rgb.unsafeFromInt(Int)")," - Invalid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.unsafeFromInt(0x000000 - 1)\n// java.lang.RuntimeException: Invalid RGB color. Input: -1\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromInt$1(Rgb.scala:46)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromInt(Rgb.scala:46)\n//  at repl.MdocSession$App0$$anonfun$1.apply(rgb.md:63)\n//  at repl.MdocSession$App0$$anonfun$1.apply(rgb.md:63)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.unsafeFromInt(0xffffff + 1)\n// java.lang.RuntimeException: Invalid RGB color. Input: 16777216\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromInt$1(Rgb.scala:46)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromInt(Rgb.scala:46)\n//  at repl.MdocSession$App0$$anonfun$2.apply(rgb.md:73)\n//  at repl.MdocSession$App0$$anonfun$2.apply(rgb.md:73)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.fromRgbInts(0x00, 0x00, 0x00)\n// res13: Either[String, Rgb] = Right(value = Rgb(0, 0, 0))\nRgb.fromRgbInts(0x00, 0x00, 0xff)\n// res14: Either[String, Rgb] = Right(value = Rgb(0, 0, 255))\nRgb.fromRgbInts(0x00, 0xff, 0x00)\n// res15: Either[String, Rgb] = Right(value = Rgb(0, 255, 0))\nRgb.fromRgbInts(0xff, 0x00, 0x00)\n// res16: Either[String, Rgb] = Right(value = Rgb(255, 0, 0))\nRgb.fromRgbInts(0xff, 0xff, 0xff)\n// res17: Either[String, Rgb] = Right(value = Rgb(255, 255, 255))\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.unsafeFromRgbInts(0x00, 0x00, 0x00)\n// res18: Rgb = Rgb(0, 0, 0)\nRgb.unsafeFromRgbInts(0x00, 0x00, 0xff)\n// res19: Rgb = Rgb(0, 0, 255)\nRgb.unsafeFromRgbInts(0x00, 0xff, 0x00)\n// res20: Rgb = Rgb(0, 255, 0)\nRgb.unsafeFromRgbInts(0xff, 0x00, 0x00)\n// res21: Rgb = Rgb(255, 0, 0)\nRgb.unsafeFromRgbInts(0xff, 0xff, 0xff)\n// res22: Rgb = Rgb(255, 255, 255)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.unsafeFromRgbInts(0x00, 0x00, 0x00 - 1)\n// java.lang.RuntimeException: Invalid RGB color. Invalid: [Blue], Input: (Red: 0, Green: 0, Blue: -1)\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromRgbInts$1(Rgb.scala:69)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromRgbInts(Rgb.scala:69)\n//  at repl.MdocSession$App0$$anonfun$3.apply(rgb.md:119)\n//  at repl.MdocSession$App0$$anonfun$3.apply(rgb.md:119)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.unsafeFromRgbInts(0x00, 0x00, 0xff + 1)\n// java.lang.RuntimeException: Invalid RGB color. Invalid: [Blue], Input: (Red: 0, Green: 0, Blue: 256)\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromRgbInts$1(Rgb.scala:69)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromRgbInts(Rgb.scala:69)\n//  at repl.MdocSession$App0$$anonfun$4.apply(rgb.md:129)\n//  at repl.MdocSession$App0$$anonfun$4.apply(rgb.md:129)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.unsafeFromRgbInts(0x00, 0x00 - 1, 0x00)\n// java.lang.RuntimeException: Invalid RGB color. Invalid: [Green], Input: (Red: 0, Green: -1, Blue: 0)\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromRgbInts$1(Rgb.scala:69)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromRgbInts(Rgb.scala:69)\n//  at repl.MdocSession$App0$$anonfun$5.apply(rgb.md:139)\n//  at repl.MdocSession$App0$$anonfun$5.apply(rgb.md:139)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.unsafeFromRgbInts(0x00, 0xff + 1, 0x00)\n// java.lang.RuntimeException: Invalid RGB color. Invalid: [Green], Input: (Red: 0, Green: 256, Blue: 0)\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromRgbInts$1(Rgb.scala:69)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromRgbInts(Rgb.scala:69)\n//  at repl.MdocSession$App0$$anonfun$6.apply(rgb.md:149)\n//  at repl.MdocSession$App0$$anonfun$6.apply(rgb.md:149)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.unsafeFromRgbInts(0x00 - 1, 0x00, 0x00)\n// java.lang.RuntimeException: Invalid RGB color. Invalid: [Red], Input: (Red: -1, Green: 0, Blue: 0)\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromRgbInts$1(Rgb.scala:69)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromRgbInts(Rgb.scala:69)\n//  at repl.MdocSession$App0$$anonfun$7.apply(rgb.md:159)\n//  at repl.MdocSession$App0$$anonfun$7.apply(rgb.md:159)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.unsafeFromRgbInts(0xff + 1, 0x00, 0x00)\n// java.lang.RuntimeException: Invalid RGB color. Invalid: [Red], Input: (Red: 256, Green: 0, Blue: 0)\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromRgbInts$1(Rgb.scala:69)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromRgbInts(Rgb.scala:69)\n//  at repl.MdocSession$App0$$anonfun$8.apply(rgb.md:169)\n//  at repl.MdocSession$App0$$anonfun$8.apply(rgb.md:169)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.unsafeFromRgbInts(0x00 - 1, 0x00 - 1, 0x00 - 1)\n// java.lang.RuntimeException: Invalid RGB color. Invalid: [Red, Green, Blue], Input: (Red: -1, Green: -1, Blue: -1)\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromRgbInts$1(Rgb.scala:69)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromRgbInts(Rgb.scala:69)\n//  at repl.MdocSession$App0$$anonfun$9.apply(rgb.md:179)\n//  at repl.MdocSession$App0$$anonfun$9.apply(rgb.md:179)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.unsafeFromRgbInts(0x00, 0x00 - 1, 0xff + 1)\n// java.lang.RuntimeException: Invalid RGB color. Invalid: [Green, Blue], Input: (Red: 0, Green: -1, Blue: 256)\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromRgbInts$1(Rgb.scala:69)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromRgbInts(Rgb.scala:69)\n//  at repl.MdocSession$App0$$anonfun$10.apply(rgb.md:189)\n//  at repl.MdocSession$App0$$anonfun$10.apply(rgb.md:189)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.unsafeFromRgbInts(0x00 - 1, 0xff + 1, 0x00)\n// java.lang.RuntimeException: Invalid RGB color. Invalid: [Red, Green], Input: (Red: -1, Green: 256, Blue: 0)\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromRgbInts$1(Rgb.scala:69)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromRgbInts(Rgb.scala:69)\n//  at repl.MdocSession$App0$$anonfun$11.apply(rgb.md:199)\n//  at repl.MdocSession$App0$$anonfun$11.apply(rgb.md:199)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.unsafeFromRgbInts(0xff + 1, 0x00, 0x00 - 1)\n// java.lang.RuntimeException: Invalid RGB color. Invalid: [Red, Blue], Input: (Red: 256, Green: 0, Blue: -1)\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromRgbInts$1(Rgb.scala:69)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromRgbInts(Rgb.scala:69)\n//  at repl.MdocSession$App0$$anonfun$12.apply(rgb.md:209)\n//  at repl.MdocSession$App0$$anonfun$12.apply(rgb.md:209)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"Rgb.unsafeFromRgbInts(0xff + 1, 0xff + 1, 0xff + 1)\n// java.lang.RuntimeException: Invalid RGB color. Invalid: [Red, Green, Blue], Input: (Red: 256, Green: 256, Blue: 256)\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromRgbInts$1(Rgb.scala:69)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromRgbInts(Rgb.scala:69)\n//  at repl.MdocSession$App0$$anonfun$13.apply(rgb.md:219)\n//  at repl.MdocSession$App0$$anonfun$13.apply(rgb.md:219)\n")),(0,l.kt)("h2",{id:"rgbfromhexstringstring---valid"},(0,l.kt)("inlineCode",{parentName:"h2"},"Rgb.fromHexString(String)")," - Valid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'Rgb.fromHexString("000000")\n// res23: Either[String, Rgb] = Right(value = Rgb(0, 0, 0))\nRgb.fromHexString("#000000")\n// res24: Either[String, Rgb] = Right(value = Rgb(0, 0, 0))\nRgb.fromHexString("0000ff")\n// res25: Either[String, Rgb] = Right(value = Rgb(0, 0, 255))\nRgb.fromHexString("#0000ff")\n// res26: Either[String, Rgb] = Right(value = Rgb(0, 0, 255))\nRgb.fromHexString("00ff00")\n// res27: Either[String, Rgb] = Right(value = Rgb(0, 255, 0))\nRgb.fromHexString("#00ff00")\n// res28: Either[String, Rgb] = Right(value = Rgb(0, 255, 0))\nRgb.fromHexString("ff0000")\n// res29: Either[String, Rgb] = Right(value = Rgb(255, 0, 0))\nRgb.fromHexString("#ff0000")\n// res30: Either[String, Rgb] = Right(value = Rgb(255, 0, 0))\nRgb.fromHexString("ffffff")\n// res31: Either[String, Rgb] = Right(value = Rgb(255, 255, 255))\nRgb.fromHexString("#ffffff")\n// res32: Either[String, Rgb] = Right(value = Rgb(255, 255, 255))\n')),(0,l.kt)("h2",{id:"rgbfromhexstringstring---invalid"},(0,l.kt)("inlineCode",{parentName:"h2"},"Rgb.fromHexString(String)")," - Invalid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'Rgb.fromHexString("00000000")\n// res33: Either[String, Rgb] = Left(value = "Invalid color hex: 00000000")\nRgb.fromHexString("#00000000")\n// res34: Either[String, Rgb] = Left(value = "Invalid color hex: #00000000")\nRgb.fromHexString("ffffffff")\n// res35: Either[String, Rgb] = Left(value = "Invalid color hex: ffffffff")\nRgb.fromHexString("#ffffffff")\n// res36: Either[String, Rgb] = Left(value = "Invalid color hex: #ffffffff")\n')),(0,l.kt)("h2",{id:"rgbunsafefromhexstringstring---valid"},(0,l.kt)("inlineCode",{parentName:"h2"},"Rgb.unsafeFromHexString(String)")," - Valid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'Rgb.unsafeFromHexString("000000")\n// res37: Rgb = Rgb(0, 0, 0)\nRgb.unsafeFromHexString("#000000")\n// res38: Rgb = Rgb(0, 0, 0)\nRgb.unsafeFromHexString("0000ff")\n// res39: Rgb = Rgb(0, 0, 255)\nRgb.unsafeFromHexString("#0000ff")\n// res40: Rgb = Rgb(0, 0, 255)\nRgb.unsafeFromHexString("00ff00")\n// res41: Rgb = Rgb(0, 255, 0)\nRgb.unsafeFromHexString("#00ff00")\n// res42: Rgb = Rgb(0, 255, 0)\nRgb.unsafeFromHexString("ff0000")\n// res43: Rgb = Rgb(255, 0, 0)\nRgb.unsafeFromHexString("#ff0000")\n// res44: Rgb = Rgb(255, 0, 0)\nRgb.unsafeFromHexString("ffffff")\n// res45: Rgb = Rgb(255, 255, 255)\nRgb.unsafeFromHexString("#ffffff")\n// res46: Rgb = Rgb(255, 255, 255)\n')),(0,l.kt)("h2",{id:"rgbunsafefromhexstringstring---invalid"},(0,l.kt)("inlineCode",{parentName:"h2"},"Rgb.unsafeFromHexString(String)")," - Invalid"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'Rgb.unsafeFromHexString("00000000")\n// java.lang.RuntimeException: Invalid color hex: 00000000\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromHexString$1(Rgb.scala:89)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromHexString(Rgb.scala:89)\n//  at repl.MdocSession$App0$$anonfun$14.apply(rgb.md:310)\n//  at repl.MdocSession$App0$$anonfun$14.apply(rgb.md:310)\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'Rgb.unsafeFromHexString("#00000000")\n// java.lang.RuntimeException: Invalid color hex: #00000000\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromHexString$1(Rgb.scala:89)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromHexString(Rgb.scala:89)\n//  at repl.MdocSession$App0$$anonfun$15.apply(rgb.md:320)\n//  at repl.MdocSession$App0$$anonfun$15.apply(rgb.md:320)\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'Rgb.unsafeFromHexString("ffffffff")\n// java.lang.RuntimeException: Invalid color hex: ffffffff\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromHexString$1(Rgb.scala:89)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromHexString(Rgb.scala:89)\n//  at repl.MdocSession$App0$$anonfun$16.apply(rgb.md:330)\n//  at repl.MdocSession$App0$$anonfun$16.apply(rgb.md:330)\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'Rgb.unsafeFromHexString("#ffffffff")\n// java.lang.RuntimeException: Invalid color hex: #ffffffff\n//  at scala.sys.package$.error(package.scala:27)\n//  at extras.scala.io.truecolor.Rgb$.$anonfun$unsafeFromHexString$1(Rgb.scala:89)\n//  at scala.util.Either.fold(Either.scala:190)\n//  at extras.scala.io.truecolor.Rgb$.unsafeFromHexString(Rgb.scala:89)\n//  at repl.MdocSession$App0$$anonfun$17.apply(rgb.md:340)\n//  at repl.MdocSession$App0$$anonfun$17.apply(rgb.md:340)\n')),(0,l.kt)("h2",{id:"rgbtoasciiesc"},(0,l.kt)("inlineCode",{parentName:"h2"},"Rgb.toAsciiEsc")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'Rgb.unsafeFromInt(0x000000).toAsciiEsc\n// res47: String = "\\u001b[38;2;0;0;0m"\nRgb.unsafeFromInt(0x0000ff).toAsciiEsc\n// res48: String = "\\u001b[38;2;0;0;255m"\nRgb.unsafeFromInt(0x00ff00).toAsciiEsc\n// res49: String = "\\u001b[38;2;0;255;0m"\nRgb.unsafeFromInt(0xff0000).toAsciiEsc\n// res50: String = "\\u001b[38;2;255;0;0m"\nRgb.unsafeFromInt(0xffffff).toAsciiEsc\n// res51: String = "\\u001b[38;2;255;255;255m"\n')),(0,l.kt)("h2",{id:"syntax"},"syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.scala.io.syntax.truecolor.rgb._\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'"Hello".rgb(0x10e0ff)\n// res53: String = "\\u001b[38;2;16;224;255mHello"\n"Hello".rgbed(0x10e0ff)\n// res54: String = "\\u001b[38;2;16;224;255mHello\\u001b[0m"\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},'import extras.scala.io.truecolor.Rgb\nRgb.fromInt(0x11a02f)\n  .map(rgb => "Hello".rgb(rgb))\n// res55: Either[String, String] = Right(value = "\\u001b[38;2;17;160;47mHello")\nRgb.fromInt(0x11a02f)\n  .map(rgb => "Hello".rgbed(rgb))\n// res56: Either[String, String] = Right(\n//   value = "\\u001b[38;2;17;160;47mHello\\u001b[0m"\n// )\n')))}b.isMDXComponent=!0}}]);